{{- $fullName := include "home-assistant.fullname" . -}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: {{ $fullName }}
spec:
    replicas: 0
    selector:
        matchLabels:
          app: {{ $fullName }}
    template:
        metadata:
            labels:
              app: {{ $fullName }}
            annotations:
              container.apparmor.security.beta.kubernetes.io/hass-supervised-docker: unconfined
        spec:
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          containers:
            - name: hass-supervised-docker
              image: registry.andrey.wtf/hass-supervised-docker
              imagePullPolicy: Always
              securityContext:
                  privileged: true
              ports:
                - containerPort: 8123
                  name: web
                - containerPort: 9323
                  name: metrics
              volumeMounts:
                - name: hass
                  mountPath: /usr/share/hassio
                - name: docker
                  mountPath: /var/lib/docker
                - name: security
                  mountPath: /sys/kernel/security
                {{- with .Values.volumeMounts }}
                {{- toYaml . | nindent 16 }}
                {{- end }}
              livenessProbe:
                httpGet:
                  path: /
                  port: web
                initialDelaySeconds: 900
                periodSeconds: 5
                failureThreshold: 10
          volumes:
            - name: security
              hostPath:
                path: '/sys/kernel/security'
            - name: docker
              persistentVolumeClaim:
                claimName: {{ .Values.persistence.docker.existingClaim }}
            - name: hass
              persistentVolumeClaim:
                claimName: {{ .Values.persistence.config.existingClaim }}
            {{- with .Values.volumes }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          affinity:
              nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/hostname
                              operator: In
                              values:
                                - hs1

---
apiVersion: v1
kind: Service
metadata:
    name: {{ $fullName }}
    labels:
        app: {{ $fullName }}
spec:
    selector:
        app: {{ $fullName }}
    ports:
      - name: http
        protocol: TCP
        port: 8123
        targetPort: 8123
      - name: manager
        port: 9323
        protocol: TCP
        targetPort: 9323

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: {{ $fullName }}
    annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
    ingressClassName: nginx
    tls:
      - hosts:
          - hass.andrey.wtf
        secretName: {{ $fullName }}-tls
    rules:
      - host: hass.andrey.wtf
        http:
            paths:
              - path: /
                pathType: Prefix
                backend:
                    service:
                        name: {{ $fullName }}
                        port:
                            number: 8123
